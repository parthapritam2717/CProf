        -:    0:Source:codeFinal.c
        -:    0:Graph:./codeFinal.gcno
        -:    0:Data:./codeFinal.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:/***********************************All the external include files please write here********************************/
        -:    2:#include<stdio.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<math.h>
        -:    5:#include<stdbool.h>
        -:    6:
        -:    7:
        -:    8:/**************************************************Includes ends here*************************************************/
        -:    9:
        -:   10:/*******************************************All #defines please include here ******************************************/
        -:   11:#define nl() printf("\n");
        -:   12:#define os() printf(" ");
        -:   13:#define sf(n) scanf("%d",&n);
        -:   14:#define pf(n) printf("%d",n);
        -:   15:
        -:   16:/*********************************************#defines ends here******************************************************/
        -:   17:
        -:   18:/******************************All the global variables and structs should be declared here***************************/
        -:   19:
        -:   20:
        -:   21:
        -:   22:
        -:   23:
        -:   24:
        -:   25:/***************************************Global variables declaration ends here***************************************/
  1017282:   26:bool is_prime(int item){
  1017282:   26-block  0
  1017282:   27:	double y=(double)item;
  1017282:   28:	double x=sqrt(y);
        -:   29:	int i;
  1017282:   30:	int end=(int)x;
1242946946:   31:	for(i=2;i<(int)x;++i){
  1017282:   31-block  0
1241929664:   31-block  1
1242946946:   31-block  2
1242894674:   32:		if(item%i==0){
1242894674:   32-block  0
   965010:   33:			return 0;
   965010:   33-block  0
        -:   34:		}
        -:   35:	}
    52272:   36:	return 1;
    52272:   36-block  0
        -:   37:}
        -:   38:
     2000:   39:int count_prime(int *array,int s){
     2000:   39-block  0
     2000:   40:	int i=0,j=0;
  1019282:   41:	for(i=0;i<s;++i){
     2000:   41-block  0
  1017282:   41-block  1
  1019282:   41-block  2
  1017282:   42:		if(array[i]>=1 && is_prime(array[i])){
  1017282:   42-block  0
  1017282:   42-block  1
    52272:   43:			j++;
    52272:   43-block  0
        -:   44:		}
        -:   45:	}
     2000:   46:	return j;
     2000:   46-block  0
        -:   47:}
        -:   48:
        -:   49:
        2:   50:int main(){
        2:   50-block  0
        -:   51:	int n;
        2:   52:	int c=0;
        -:   53:	int t;
        2:   54:	sf(t);
        2:   54-block  0
     2002:   55:	while(t>0){
     2002:   55-block  0
     2000:   56:		sf(n);
     2000:   56-block  0
        -:   57:		int i;
     2000:   58:		int array[n];
  1019282:   59:		for(i=0;i<n;++i){
  1019282:   59-block  0
  1017282:   60:			sf(array[i]);
  1017282:   60-block  0
        -:   61:		}
     2000:   62:		int count=(count_prime(array,n));
     2000:   62-block  0
     2000:   63:		printf("%d num of primes=",c);
     2000:   64:		pf(count);
     2000:   65:		c++;
     2000:   66:		nl();
     2000:   67:		--t;
        -:   68:	}
        -:   69:
        -:   70:	// will also send some packets but later
        -:   71:
        2:   72:	return 0;
        2:   72-block  0
        -:   73:}
